//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebMVC_eSport.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eSportsEntities : DbContext
    {
        public eSportsEntities()
            : base("name=eSportsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EQUIPO> EQUIPO { get; set; }
    
        public virtual int ActualizarEquipo(Nullable<int> idEquipo, string nomEquipo, string paisEquipo)
        {
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            var nomEquipoParameter = nomEquipo != null ?
                new ObjectParameter("NomEquipo", nomEquipo) :
                new ObjectParameter("NomEquipo", typeof(string));
    
            var paisEquipoParameter = paisEquipo != null ?
                new ObjectParameter("PaisEquipo", paisEquipo) :
                new ObjectParameter("PaisEquipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEquipo", idEquipoParameter, nomEquipoParameter, paisEquipoParameter);
        }
    
        public virtual int EliminarEquipo(Nullable<int> iDEQUIPO)
        {
            var iDEQUIPOParameter = iDEQUIPO.HasValue ?
                new ObjectParameter("IDEQUIPO", iDEQUIPO) :
                new ObjectParameter("IDEQUIPO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEquipo", iDEQUIPOParameter);
        }
    
        public virtual int InsertarEquipo(string nomEquipo, string paisEquipo)
        {
            var nomEquipoParameter = nomEquipo != null ?
                new ObjectParameter("NomEquipo", nomEquipo) :
                new ObjectParameter("NomEquipo", typeof(string));
    
            var paisEquipoParameter = paisEquipo != null ?
                new ObjectParameter("PaisEquipo", paisEquipo) :
                new ObjectParameter("PaisEquipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEquipo", nomEquipoParameter, paisEquipoParameter);
        }
    }
}
